import streamlit as st
import json
import openai
from streamlit import secrets  # For cloud secrets
try:
    openai.api_key = st.secrets["OPENAI_API_KEY"]  
except KeyError:
    openai.api_key = None  # Fallback: Disable OpenAI if no secret
    st.warning("OpenAI not configured. Using rule-based responses only.")

# App title and theme
st.set_page_config(page_title="Krishi Sakhi", page_icon="üå±", layout="wide")
st.title("üå± ‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç! ‡¥û‡¥æ‡µª ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥ñ‡¥ø (Welcome! I'm your Farming Friend)")

# Session state for profile and chat
if 'profile' not in st.session_state:
    st.session_state.profile = {}
if 'messages' not in st.session_state:
    st.session_state.messages = []

# Sidebar navigation
page = st.sidebar.selectbox("‡¥™‡µá‡¥ú‡µç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï (Select Page)", ["‡¥π‡µã‡¥Ç (Home)", "‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ (Profile)", "‡¥ö‡¥æ‡¥±‡µç‡¥±‡µç (Chat)"])

if page == "‡¥π‡µã‡¥Ç (Home)":
    st.header("‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥ñ‡¥ø ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç? (How can Krishi Sakhi Help?)")
    st.write("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥µ‡¥ø‡¥≥‡¥ï‡µæ, ‡¥ï‡µÄ‡¥ü‡¥ô‡µç‡¥ô‡µæ, ‡¥Æ‡¥¥ ‡¥é‡¥®‡µç‡¥®‡¥ø‡¥µ‡¥Ø‡µÜ‡¥ï‡µç‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÇ. (Ask about crops, pests, rain, etc.)")
    st.button("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡¥ú‡µç‡¥ú‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï (Set Profile)", on_click=lambda: st.switch_page("app.py"))  # Redirect logic

elif page == "‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ (Profile)":
    st.header("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥µ‡¥ø‡¥∂‡¥¶‡¥æ‡¥Ç‡¥∂‡¥ô‡µç‡¥ô‡µæ (Your Details)")
    with st.form("profile_form"):
        name = st.text_input("‡¥™‡µá‡¥∞‡µç (Name)")
        location = st.selectbox("‡¥∏‡µç‡¥•‡¥≤‡¥Ç (Location)", ["‡¥§‡µÉ‡¥∂‡µç‡¥∂‡µÇ‡µº", "‡¥µ‡¥Ø‡¥®‡¥æ‡¥ü‡µç", "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø", "‡¥ï‡¥æ‡¥∏‡µº‡¥ó‡µã‡¥°‡µç"])
        land_size = st.number_input("‡¥®‡¥ø‡¥≤‡¥Ç ‡¥µ‡¥≤‡¥ø‡¥™‡µç‡¥™‡¥Ç (Land Size in cents)", min_value=1.0)
        crop = st.selectbox("‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥µ‡¥ø‡¥≥ (Main Crop)", ["‡¥¨‡µç‡¥∞‡¥ø‡µª‡¥ú‡¥æ‡µΩ (Brinjal)", "‡¥®‡µÜ‡¥≤‡µç‡¥≤‡µç (Rice)", "‡¥§‡µÜ‡¥ô‡µç‡¥ô‡µç (Coconut)", "‡¥Æ‡¥∞‡¥ö‡µç‡¥ö‡µÄ‡¥∞ (Banana)"])
        soil = st.selectbox("‡¥Æ‡¥£‡µç‡¥£‡µç ‡¥§‡¥∞‡¥Ç (Soil Type)", ["‡¥Æ‡¥£‡µΩ (Sandy)", "‡¥ï‡¥≥‡¥ø‡¥Æ‡¥£‡µç‡¥£‡µç (Loamy)", "‡¥ï‡¥±‡µÅ‡¥§‡µç‡¥§ (Clay)"])
        submitted = st.form_submit_button("‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï (Save)")
        if submitted:
            st.session_state.profile = {"name": name, "location": location, "land_size": land_size, "crop": crop, "soil": soil}
            st.success("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ! (Profile Saved!)")
            st.rerun()

elif page == "‡¥ö‡¥æ‡¥±‡µç‡¥±‡µç (Chat)":
    if not st.session_state.profile:
        st.warning("‡¥Ü‡¥¶‡µç‡¥Ø‡¥Ç ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥™‡µÇ‡¥∞‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï. (Complete profile first.)")
        st.stop()
    st.header(f"‡¥π‡¥æ‡¥Ø‡µç {st.session_state.profile['name']}! ‡¥é‡¥®‡µç‡¥§‡¥æ‡¥£‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª? (Hi! What's your query?)")
    # Chat display (next step)
    # Display chat history
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

    # User input
    if prompt := st.chat_input("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥Ç ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥ü‡µà‡¥™‡µç‡¥™‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï (Type your query here)"):
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)

    # In your generate_bot_response function, add a check:
    def generate_bot_response(user_input, profile):
        if openai.api_key is None:
            # Fallback to rule-based (your existing rules)
            user_input_lower = user_input.lower()
            # ... (your if-elif rules here, e.g., for '‡¥Æ‡¥¥', '‡¥ï‡µÄ‡¥ü‡¥Ç')
            return "Rule-based response: ‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥µ‡¥ø‡¥∂‡¥¶‡¥æ‡¥Ç‡¥∂‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥±‡¥Ø‡µÇ."  # Example fallback
        
        # OpenAI logic (only if key exists)
        else:
            context = f"Farmer profile: {profile}. User query: {user_input}. Respond in simple Malayalam about Kerala farming."
            try:
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": "You are Krishi Sakhi, a helpful farming assistant. Respond in Malayalam."},
                        {"role": "user", "content": context}
                    ],
                    max_tokens=150
                )
                return response.choices[0].message.content
            except Exception as e:
                st.error(f"OpenAI error: {e}")
                return "‡¥Ü‡¥∂‡¥Ø‡¥ï‡µç‡¥ï‡µÅ‡¥¥‡¥™‡µç‡¥™‡¥Ç. ‡¥µ‡µÄ‡¥£‡µç‡¥ü‡µÅ‡¥Ç ‡¥∂‡µç‡¥∞‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï. (Error. Try again.)"


