import streamlit as st

# Page config (Malayalam title, wide layout for mobile)
st.set_page_config(
    page_title="Krishi Sakhi - ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥ñ‡¥ø",
    page_icon="üå±",
    layout="wide"
)

# Initialize session state for profile and pages
if 'profile' not in st.session_state:
    st.session_state.profile = {}
if 'show_profile' not in st.session_state:
    st.session_state.show_profile = False
if 'show_chat' not in st.session_state:
    st.session_state.show_chat = False

# Title and welcome
st.title("üå± ‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç! Krishi Sakhi - ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥ñ‡¥ø")
st.markdown("---")

# Welcome section (initial view)
if not st.session_state.show_profile and not st.session_state.show_chat:
    st.header("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡¥ú‡µç‡¥ú‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï")
    st.write("‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥π‡¥æ‡¥Ø‡¥§‡µç‡¥§‡¥ø‡¥®‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥µ‡¥ø‡¥µ‡¥∞‡¥ô‡µç‡¥ô‡µæ ‡¥™‡µÇ‡¥∞‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï. (Fill your farmer profile for personalized advice.)")
    
    # Set Profile Button (no switch_page - toggles view)
    if st.button("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡¥ú‡µç‡¥ú‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï (Set Profile)", use_container_width=True):
        st.session_state.show_profile = True
        st.rerun()  # Refresh to show profile form
    
    st.markdown("---")
    st.write("*‡¥â‡¥¶‡¥æ‡¥π‡¥∞‡¥£‡¥Ç: ‡¥§‡µÉ‡¥∂‡µç‡¥∂‡µÇ‡µº, ‡¥¨‡µç‡¥∞‡¥ø‡µª‡¥ú‡¥æ‡µΩ, ‡¥ö‡µÜ‡¥±‡µÅ ‡¥®‡¥æ‡¥ü‡µç‡¥ü‡¥ø‡µª‡¥™‡µÅ‡¥±‡¥Ç* (Example: Thrissur, Brinjal, Sandy loam)")

# Profile Setup Section
elif st.session_state.show_profile:
    st.header("üë®‚Äçüåæ ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ (Your Profile)")
    
    # Form for profile inputs (use columns for better layout)
    col1, col2 = st.columns(2)
    
    with col1:
        location = st.selectbox("‡¥∏‡µç‡¥•‡¥≤‡¥Ç (Location)", ["‡¥§‡µÉ‡¥∂‡µç‡¥∂‡µÇ‡µº", "‡¥ï‡µä‡¥ö‡µç‡¥ö‡¥ø", "‡¥ï‡µã‡¥¥‡¥ø‡¥ï‡µç‡¥ï‡µã‡¥ü‡µç", "‡¥Æ‡¥±‡µç‡¥±‡µç (Other)"])
        crop = st.selectbox("‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥µ‡¥ø‡¥≥ (Main Crop)", ["‡¥¨‡µç‡¥∞‡¥ø‡µª‡¥ú‡¥æ‡µΩ (Brinjal)", "‡¥™‡¥ö‡µç‡¥ö‡¥ï‡µç‡¥ï‡¥±‡¥ø (Vegetables)", "‡¥Æ‡¥∞‡¥Ç (Trees)", "‡¥Æ‡¥±‡µç‡¥±‡µç (Other)"])
    
    with col2:
        soil = st.selectbox("‡¥Æ‡¥£‡µç‡¥£‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥§‡¥∞‡¥Ç (Soil Type)", ["‡¥ö‡µÜ‡¥±‡µÅ ‡¥®‡¥æ‡¥ü‡µç‡¥ü‡¥ø‡µª‡¥™‡µÅ‡¥±‡¥Ç (Sandy Loam)", "‡¥ï‡¥≥‡µç‡¥≥‡¥Æ‡¥£‡µç‡¥£‡µç (Clay)", "‡¥Æ‡¥±‡µç‡¥±‡µç (Other)"])
        experience = st.slider("‡¥ï‡µÉ‡¥∑‡¥ø ‡¥Ö‡¥®‡µÅ‡¥≠‡¥µ‡¥Ç (Years of Experience)", 0, 30, 5)
    
    # Submit Button
    if st.button("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï (Save Profile)", use_container_width=True):
        st.session_state.profile = {
            'location': location,
            'crop': crop,
            'soil': soil,
            'experience': experience
        }
        st.session_state.show_profile = False
        st.session_state.show_chat = True
        st.success("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥∏‡µá‡¥µ‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ! (Profile saved!)")
        st.rerun()  # Go to chat
    
    # Back button
    if st.button("‡¥Ö‡¥ü‡¥ô‡µç‡¥ô‡µæ (Back to Welcome)"):
        st.session_state.show_profile = False
        st.rerun()

# Chat Section
elif st.session_state.show_chat:
    st.header(f"üí¨ ‡¥ö‡¥æ‡¥±‡µç‡¥±‡µç - {st.session_state.profile.get('crop', '‡¥µ‡¥ø‡¥≥')} ‡¥µ‡¥ø‡¥≥‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥ ‡¥â‡¥™‡¥¶‡µá‡¥∂‡¥Ç (Chat - Advice for {st.session_state.profile.get('crop', 'Crop')})")
    
    # Display saved profile
    st.subheader("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ (Your Profile):")
    profile_str = f"‡¥∏‡µç‡¥•‡¥≤‡¥Ç: {st.session_state.profile.get('location', 'N/A')}, ‡¥µ‡¥ø‡¥≥: {st.session_state.profile.get('crop', 'N/A')}, ‡¥Æ‡¥£‡µç‡¥£‡µç: {st.session_state.profile.get('soil', 'N/A')}, ‡¥Ö‡¥®‡µÅ‡¥≠‡¥µ‡¥Ç: {st.session_state.profile.get('experience', 0)} ‡¥µ‡µº‡¥∑‡¥Ç"
    st.write(profile_str)
    
    # Chat interface (rule-based example - add your OpenAI if needed)
    if 'messages' not in st.session_state:
        st.session_state.messages = []
    
    # Display chat history
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])
    
    # Chat input
    if prompt := st.chat_input("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ö‡µã‡¥¶‡µç‡¥Ø‡¥Ç ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥ü‡µà‡¥™‡µç‡¥™‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï (Type your query, e.g., '‡¥Æ‡¥¥' or '‡¥ï‡µÄ‡¥ü‡¥Ç')"):
        # Add user message
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        
        # Generate response (rule-based fallback)
        def generate_bot_response(user_input, profile):
            user_input_lower = user_input.lower()
            crop = profile.get('crop', '')
            location = profile.get('location', '')
            
            if '‡¥Æ‡¥¥' in user_input_lower or 'rain' in user_input_lower:
                return f"{location}‡¥Ø‡¥ø‡µΩ ‡¥á‡¥®‡µç‡¥®‡µç ‡¥Æ‡¥¥ ‡¥∏‡¥æ‡¥ß‡µç‡¥Ø‡¥§ 70%. {crop} ‡¥µ‡¥ø‡¥≥‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç ‡¥ú‡¥≤‡¥Ç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï. (Rain 70% in {location}. Reduce water for {crop}.)"
            elif '‡¥ï‡µÄ‡¥ü‡¥Ç' in user_input_lower or 'pest' in user_input_lower:
                return f"{crop}‡¥Ø‡¥ø‡µΩ ‡¥ï‡µÄ‡¥ü‡¥ô‡µç‡¥ô‡µæ: ‡¥®‡µÄ‡¥∞‡¥æ‡¥≥‡¥ø ‡¥∏‡µç‡¥™‡µç‡¥∞‡µá (10ml/‡¥≤‡¥ø‡¥±‡µç‡¥±‡µº) ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï. {profile.get('soil', '')} ‡¥Æ‡¥£‡µç‡¥£‡¥ø‡¥®‡µç ‡¥Ö‡¥®‡µÅ‡¥Ø‡µã‡¥ú‡µç‡¥Ø‡¥Ç. (Pests in {crop}: Use neem spray 10ml/liter. Suitable for {profile.get('soil', 'soil')}.)"
            elif '‡¥µ‡¥≥‡¥Ç' in user_input_lower or 'fertilizer' in user_input_lower:
                return f"{profile.get('soil', '‡¥Æ‡¥£‡µç‡¥£‡µç')}‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç ‡¥ì‡µº‡¥ó‡¥æ‡¥®‡¥ø‡¥ï‡µç ‡¥ï‡¥Æ‡µç‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç 2kg/‡¥∏‡µÜ‡¥®‡µç‡¥±‡µç. (Organic compost 2kg/cent for your soil.)"
            else:
                return f"‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥µ‡¥ø‡¥∂‡¥¶‡¥æ‡¥Ç‡¥∂‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥±‡¥Ø‡µÇ. ‡¥â‡¥¶‡¥æ: '‡¥Æ‡¥¥' ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ '‡¥ï‡µÄ‡¥ü‡¥Ç'. (Tell more. E.g., 'rain' or 'pest'.)"
        
        with st.chat_message("assistant"):
            response = generate_bot_response(prompt, st.session_state.profile)
            st.markdown(response)
            st.session_state.messages.append({"role": "assistant", "content": response})
        
        st.rerun()
    
    # Back to profile edit
    if st.button("‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥é‡¥°‡¥ø‡¥±‡µç‡¥±‡µç (Edit Profile)"):
        st.session_state.show_chat = False
        st.session_state.show_profile = True
        st.rerun()
